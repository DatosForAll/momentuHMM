% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitHMM.R
\name{fitHMM}
\alias{fitHMM}
\title{Fit an HMM to the data}
\usage{
fitHMM(data, nbStates, dist, Par, beta0 = NULL, delta0 = NULL,
  formula = ~1, stationary = FALSE, verbose = 0, nlmPar = NULL,
  fit = TRUE, DM = NULL, cons = NULL, userBounds = NULL,
  logitcons = NULL, stateNames = NULL)
}
\arguments{
\item{data}{An object \code{moveData}.}

\item{nbStates}{Number of states of the HMM.}

\item{beta0}{Initial matrix of regression coefficients for the transition probabilities (more
information in "Details").
Default: \code{NULL}. If not specified, \code{beta0} is initialized such that the diagonal elements
of the transition probability matrix are dominant.}

\item{delta0}{Initial value for the initial distribution of the HMM. Default: \code{rep(1/nbStates,nbStates)}.}

\item{formula}{Regression formula for the covariates. Default: \code{~1} (no covariate effect).}

\item{stationary}{\code{FALSE} if there are covariates. If \code{TRUE}, the initial distribution is considered
equal to the stationary distribution. Default: \code{FALSE}.}

\item{verbose}{Determines the print level of the optimizer. The default value of 0 means that no
printing occurs, a value of 1 means that the first and last iterations of the optimization are
detailed, and a value of 2 means that each iteration of the optimization is detailed.}

\item{nlmPar}{List of parameters to pass to the optimization function \code{nlm} (which should be either
'\code{gradtol}', '\code{stepmax}', '\code{steptol}', or '\code{iterlim}' -- see \code{nlm}'s documentation
for more detail)}

\item{fit}{\code{TRUE} if an HMM should be fitted to the data, \code{FALSE} otherwise.
If fit=\code{FALSE}, a model is returned with the MLE replaced by the initial parameters given in
input. This option can be used to assess the initial parameters. Default: \code{TRUE}.}

\item{cons}{Optional list specifying power to raise parameters corresponding to each column of the design matrix for each data stream. While there could be other uses, primarily intended to constrain specific parameters to be positive by setting cons=2.  Default=NULL, which simply raises all parameters to the power of 1.}

\item{userBounds}{User specified bounds for all parameters in order '\code{rbind(stepBounds,angleBounds,omegaBounds,dryBounds,diveBounds,iceBounds,landBounds)}'}

\item{logitcons}{Lower bound for wrpcauchy turning angle concentration parameter (on logit scale)}

\item{stateNames}{Optional character vector of length nbStates indicating state names.}

\item{stepPar}{Vector of initial state-dependent step length distribution parameters.
The parameters should be in the order expected by the pdf of \code{stepDist}, and the zero-mass
parameter should be the last. Note that zero-mass parameters are mandatory if there are steps of
length zero in the data.
For example, for a 2-state model using the gamma distribution and
including zero-inflation, the vector of initial parameters would be something like:
\code{c(mu1,mu2,sigma1,sigma2,zeromass1,zeromass2)}.}

\item{anglePar}{Vector of initial state-dependent turning angle distribution parameters.
The parameters should be in the order expected by the pdf of \code{angleDist}. For example, for a 2-state
model using the Von Mises (vm) distribution, the vector of initial parameters would be something like:
\code{c(mu1,mu2,kappa1,kappa2)}.}

\item{stepDist}{Name of the distribution of the step lengths (as a character string).
Supported distributions are: gamma, weibull, lnorm, exp. Default: gamma.}

\item{angleDist}{Name of the distribution of the turning angles (as a character string).
Supported distributions are: vm, wrpcauchy. Set to \code{"none"} if the angle distribution should
not be estimated. Default: vm.}

\item{angleMean}{Vector of means of turning angles if not estimated (one for each state).
Default: \code{NULL} (the angle mean is estimated).}

\item{stepDM}{stepPar design matrix}

\item{angleDM}{anglePar design matrix}

\item{omegaDM}{omegaPar design matrix}

\item{dryDM}{dryPar design matrix}

\item{diveDM}{divePar design matrix}

\item{iceDM}{icePar design matrix}

\item{landDM}{landPar design matrix}
}
\value{
A \code{momentuHMM} object, i.e. a list of:
\item{mle}{The maximum likelihood estimates of the parameters of the model (if the numerical algorithm
has indeed identified the global maximum of the likelihood function), which is a list
of: \code{stepPar} (step distribution parameters), \code{anglePar} (angle distribution
parameters), \code{beta} (transition probabilities regression coefficients - more information
in "Details"), and \code{delta} (initial distribution).}
\item{CI_real}{Standard errors and 95\% confidence intervals on the real (i.e., natural) scale of parameters}
\item{CI_beta}{Standard errors and 95\% confidence intervals on the beta (i.e., working) scale of parameters}
\item{data}{The movement data}
\item{mod}{The object returned by the numerical optimizer \code{nlm}}
\item{conditions}{Conditions used to fit the model (e.g., parameter bounds, distributions, \code{zeroInflation}, \code{estAngleMean},
\code{stationary}, and \code{formula})}
\item{rawCovs}{Raw covariate values, as found in the data (if any). Used in \code{\link{plot.momentuHMM}}.}
}
\description{
Fit an hidden Markov model to the data provided, using numerical optimization of the log-likelihood
function.
}
\details{
\itemize{
\item The matrix \code{beta} of regression coefficients for the transition probabilities has
one row for the intercept, plus one row for each covariate, and one column for
each non-diagonal element of the transition probability matrix. For example, in a 3-state
HMM with 2 covariates, the matrix \code{beta} has three rows (intercept + two covariates)
and six columns (six non-diagonal elements in the 3x3 transition probability matrix -
filled in row-wise).
In a covariate-free model (default), \code{beta} has one row, for the intercept.

\item The choice of initial parameters is crucial to fit a model. The algorithm might not find
the global optimum of the likelihood function if the initial parameters are poorly chosen.
}
}
\examples{
### 1. simulate data
# define all the arguments of simData
nbAnimals <- 2
nbStates <- 2
nbCovs <- 2
mu<-c(15,50)
sigma<-c(10,20)
angleMean <- c(pi,0)
kappa <- c(0.7,1.5)
stepPar <- c(mu,sigma)
anglePar <- c(angleMean,kappa)
stepDist <- "gamma"
angleDist <- "vm"
zeroInflation <- FALSE
obsPerAnimal <- c(50,100)

data <- simData(nbAnimals=nbAnimals,nbStates=nbStates,stepDist=stepDist,angleDist=angleDist,
                 stepPar=stepPar,anglePar=anglePar,nbCovs=nbCovs,zeroInflation=zeroInflation,
                 obsPerAnimal=obsPerAnimal)

### 2. fit the model to the simulated data
# define initial values for the parameters
mu0 <- c(20,70)
sigma0 <- c(10,30)
kappa0 <- c(1,1)
stepPar <- c(mu0,sigma0) # no zero-inflation, so no zero-mass included
anglePar <- kappa0 # the angle mean is not estimated, so only the concentration parameter is needed
formula <- ~cov1+cos(cov2)

m <- fitHMM(data=data,nbStates=nbStates,stepPar=stepPar,anglePar=anglePar,formula=formula,
              stepDist=stepDist,angleDist=angleDist,angleMean=angleMean)

print(m)

}
\references{
Patterson T.A., Basson M., Bravington M.V., Gunn J.S. 2009.
Classifying movement behaviour in relation to environmental conditions using hidden Markov models.
Journal of Animal Ecology, 78 (6), 1113-1123.

Langrock R., King R., Matthiopoulos J., Thomas L., Fortin D., Morales J.M. 2012.
Flexible and practical modeling of animal telemetry data: hidden Markov models and extensions.
Ecology, 93 (11), 2336-2342.
}

